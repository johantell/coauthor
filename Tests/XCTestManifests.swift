#if !canImport(ObjectiveC)
import XCTest

extension CoauthorSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CoauthorSpec = [
        ("help__prints_a_help_message", help__prints_a_help_message),
    ]
}

extension CoworkerListSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CoworkerListSpec = [
        ("_addCoworker__writes_a_coworker_to_the_coworker_storage_file", _addCoworker__writes_a_coworker_to_the_coworker_storage_file),
        ("_addCoworker__keeps_any_existing_coworkers_in_the_coworker_storage_file", _addCoworker__keeps_any_existing_coworkers_in_the_coworker_storage_file),
        ("_addCoworker__doesn_t_add_duplicate_usernames_to_the_coworker_storage_file", _addCoworker__doesn_t_add_duplicate_usernames_to_the_coworker_storage_file),
        ("_addCoworker__gracefully_handles_an_empty_storage_file", _addCoworker__gracefully_handles_an_empty_storage_file),
        ("removeCoworker__removes_a_coworker_to_the_coworker_storage_file", removeCoworker__removes_a_coworker_to_the_coworker_storage_file),
        ("removeCoworker__prints_an_error_when_coworker_doesn_t_exist", removeCoworker__prints_an_error_when_coworker_doesn_t_exist),
    ]
}

extension GitCommitTemplateSpec {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GitCommitTemplateSpec = [
        ("updates_Co_Authored_By_in_the_passed_fileManager", updates_Co_Authored_By_in_the_passed_fileManager),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CoauthorSpec.__allTests__CoauthorSpec),
        testCase(CoworkerListSpec.__allTests__CoworkerListSpec),
        testCase(GitCommitTemplateSpec.__allTests__GitCommitTemplateSpec),
    ]
}
#endif
